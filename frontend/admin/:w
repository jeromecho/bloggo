import React, { useState, useRef } from 'react';
import { Header } from '../components/Header';
import { Footer } from '../components/Footer';
import { Editor } from '@tinymce/tinymce-react';
import axios, { AxiosRequestConfig } from 'axios';

export interface CreatePostProps {

}

const CreatePost: React.FunctionComponent<CreatePostProps> = ({

}) => {
    // use type any, since Editor is provided by a 3rd party library w out 
    // types nicely defined
    const editorRef = useRef<any>(null);
    const [ name, setName ] = useState<string>('');
    const [ name, setName ] = useState<boolean>(false);
    const [ name, setName ] = useState<string>('');
    const log = () => {
        if (editorRef.current) { 
            const len = editorRef.current.getContent().length; 
            console.log(editorRef.current.getContent().slice(3, len - 4));
        }
    };

    const handleSubmit = (e: React.FormEvent) => {
        e.preventDefault();
    };

    return (
        <>
        <Header />
        <main className='create'>
            <div className='blur' />
            <div className='spacer' />
            <div>
                <div className='hero-content'>
                    <h1>Create Post</h1>
                    <hr />
                </div>
                <form className='form-content' onSubmit={handleSubmit}>
                    <fieldset className='form-field'>
                        <label htmlFor='name'>Title</label>
                        <input
                            type='text' 
                            name='name'
                            id='name'
                            placeholder='Why I stopped eating meat'
                        />
                    </fieldset>
                    <fieldset className='form-field'>
                        <legend>Post Options</legend>
                        <div className='radios-container'>
                            <div className='radio'>
                                <input
                                    type='radio' 
                                    name='is_published'
                                    value='false'
                                    select='true'
                                    id='draft'
                                />
                                <label htmlFor='draft'>Draft</label>
                            </div>
                            <div className='radio'>
                                <input
                                    type='radio' 
                                    name='is_published'
                                    value='true'
                                    id='publish'
                                />
                                <label htmlFor='publish'>Publish</label>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset className='form-field'>
                        <label htmlFor='content'>Content</label>
                        <Editor
                            apiKey={process.env.REACT_APP_TINY_API_KEY}
                            ref={editorRef}
                            onInit={(evt, editor) => {
                                if (editorRef.current) {
                                    console.log(editor);
                                    console.log(editorRef.current);
                                    editorRef.current = editor
                                }
                            }}
                            initialValue={"<p>This is the initial content of the editor.</p>"}
                            init={{
                                height: 500,
                                    menubar: false,
                                    plugins: [
                                        'advlist autolink lists link image charmap print preview anchor',
                                        'searchreplace visualblocks code fullscreen',
                                        'insertdatetime media table paste code help wordcount'
                                    ],
                                    toolbar: 'undo redo | formatselect | ' +
                                    'bold italic backcolor | alignleft aligncenter ' +
                                    'alignright alignjustify | bullist numlist outdent indent | ' +
                                    'removeformat | help',
                                                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'
                            }}
                        />
                </fieldset>
                <button type='button' onClick={log}>Post</button>
                </form>
            </div>
            <div className='spacer' />
            <div className='blur' />
        </main>
        <Footer />
    </>
    );
}

export { CreatePost };
